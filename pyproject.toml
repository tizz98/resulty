[tool.poetry]
name = "resulty"
version = "0.1.0"
description = "Usable Python exceptions."
authors = ["Elijah Wilson <dev.tizz98@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"


[tool.poetry.group.dev.dependencies]
ruff = "^0.12.12"
pytest = "^8.4.2"
pytest-asyncio = "^1.1.0"
mypy = "^1.17.1"
pytest-cov = "^6.3.0"

[tool.coverage.run]
source = ["resulty"]
omit = ["tests/*", "**/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["tests", "resulty"]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]  # E: pycodestyle errors, F: pyflakes, I: isort
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["resulty"]
force-single-line = false
combine-as-imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
